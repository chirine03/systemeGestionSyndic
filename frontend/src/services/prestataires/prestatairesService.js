const API_URL = "http://localhost:3001/api/prestataires";

// ‚úÖ Fonction pour ajouter un prestataire
export const addPrestataire = async (prestataireData) => {
  return await envoyerRequete(`${API_URL}/addPrestataire`, prestataireData);
};

// ‚úÖ Fonction pour modifier un prestataire
export const updatePrestataire = async (prestataireData) => {
    console.log("Re√ßu dans le service :", prestataireData);
  return await envoyerRequete(`${API_URL}/updatePrestataire`, prestataireData);
  
};

// ‚úÖ Fonction pour r√©cup√©rer la liste des prestataires
export const getListePrestataire = async () => {
  try {
    const response = await fetch(`${API_URL}/ListePrestataire`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    });

    const result = await response.json();
    console.log("Liste des prestataires :", result);

    if (result.success) {
      return { success: true, data: result.data };
    } else {
      return { success: false, message: "Impossible de r√©cup√©rer la liste des prestataires." };
    }
  } catch (error) {
    console.error("Erreur lors de la r√©cup√©ration des prestataires :", error);
    return { success: false, message: "Erreur r√©seau. Veuillez r√©essayer plus tard." };
  }
};

// ‚úÖ Fonction pour supprimer un prestataire
export const deletePrestataire = async (id_prestataire) => {
  try {
    const response = await fetch(`${API_URL}/deletePrestataire`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id_prestataire }),
    });

    const result = await response.json();
    console.log('R√©ponse du serveur:', result);

    if (result.success) {
      return { success: true, message: 'Prestataire supprim√© avec succ√®s.' };
    } else {
      return { success: false, message: result.message || 'Erreur lors de la suppression du prestataire.' };
    }
  } catch (error) {
    console.error('Erreur lors de la suppression du prestataire:', error);
    return { success: false, message: 'Erreur r√©seau. Veuillez r√©essayer plus tard.' };
  }
};

// üîÅ Fonction r√©utilisable pour POST (ajout ou mise √† jour)
const envoyerRequete = async (url, data) => {
  try {
    const response = await fetch(url, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data),
    });

    const result = await response.json();
    console.log("R√©ponse du serveur:", result);

    if (result.success) {
      return { success: true, message: result.message };
    } else {
      // Gestion centralis√©e des messages d‚Äôerreur
      switch (result.message) {
        case 'Un prestataire avec cet email existe d√©j√†.':
        case 'Un prestataire avec ce num√©ro de t√©l√©phone existe d√©j√†.':
        case 'Un prestataire avec ce matricule existe d√©j√†.':
        case 'Un prestataire avec ce fax existe d√©j√†.':
        case 'Certains champs sont manquants. Raison sociale, matricule et email sont obligatoires.':
          return { success: false, message: result.message };
        case 'Erreur serveur.':
          return { success: false, message: "Erreur serveur. Veuillez r√©essayer plus tard." };
        default:
          return { success: false, message: "Une erreur inconnue est survenue. Veuillez r√©essayer." };
      }
    }
  } catch (error) {
    console.error("Erreur lors de la requ√™te prestataire:", error);
    return { success: false, message: "Erreur r√©seau. Veuillez r√©essayer plus tard." };
  }
};
